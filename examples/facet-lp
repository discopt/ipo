#!/usr/bin/python

import sys
import IPO
import random

useExact = False

fileName = sys.argv[1]
mils = IPO.MixedIntegerLinearSet(fileName)
if useExact:
  exactOracle = IPO.ExactSCIPOracle(fileName, mils)
  approxOracle = IPO.SCIPOracle(fileName, mils, exactOracle)
else:
  approxOracle = IPO.SCIPOracle(fileName, mils)
P = IPO.Polyhedron(approxOracle)

cons = mils.getConstraints()
lp = IPO.LinearProgram(mils)

for i in xrange(10):
  print('Random objective #%d' % (i+1))
  objective = [ (random.random() - 0.5) for i in xrange(lp.numVariables) ]
  lp.changeObjective(objective)

  while True:
    print('Solving LP with %d rows.' % (lp.numRows))
    (status, point, value) = lp.solve()
    assert status == IPO.LinearProgram.OPTIMAL
    print('LP-optimum: %s' % (point))
    cons = P.separatePoint(point)
    if cons is None:
      break
    print('Separated facet: %s' % (cons))
    lp.addConstraint(cons)
  print
