import os
from setuptools import setup, Extension
from Cython.Build import cythonize


GMP_include_dirs = "@GMP_INCLUDE_DIRS@"
GMP_libraries = "@GMP_LIBRARIES@"

SoPlex_include_dirs = "@SoPlex_INCLUDE_DIRS@"
SoPlex_libraries = "@SoPlex_LIBRARIES@"

SCIP_include_dirs = "@SCIP_INCLUDE_DIRS@"
SCIP_libraries = "@SCIP_LIBRARIES@"

ZIMPL_include_dirs = "@ZIMPL_INCLUDE_DIRS@"
ZIMPL_libraries = "@ZIMPL_LIBRARIES@"

IPO_include_dirs = "@IPO_INCLUDE_DIRS@"
IPO_libraries = "@IPO_LIBRARIES@".replace('ipo-shared', 'ipo')
IPO_library_dirs = IPO_include_dirs # TODO: replace by cmake-generated.
IPO_source = "@CMAKE_SOURCE_DIR@"

def parseIncludes(incs):
  incs = incs.split(';')
  return incs

GMP_include_dirs = parseIncludes(GMP_include_dirs)
SoPlex_include_dirs = parseIncludes(SoPlex_include_dirs)
SCIP_include_dirs = parseIncludes(SCIP_include_dirs)
ZIMPL_include_dirs = parseIncludes(ZIMPL_include_dirs)
IPO_include_dirs = parseIncludes(IPO_include_dirs)

def parseLibraries(libs):
  libs = libs.split(';')
  for i in xrange(len(libs)):
    if libs[i].startswith('-l'):
      libs[i] = libs[i][2:]
  return libs

GMP_libraries = parseLibraries(GMP_libraries)
SoPlex_libraries = parseLibraries(SoPlex_libraries)
SCIP_libraries = parseLibraries(SCIP_libraries)
ZIMPL_libraries = parseLibraries(ZIMPL_libraries)
IPO_libraries = parseLibraries(IPO_libraries)

def parseLibraryDirs(dirs):
  dirs = dirs.split(';')
  return dirs

IPO_library_dirs = parseLibraryDirs(IPO_library_dirs)

print GMP_include_dirs
print GMP_libraries
print SoPlex_include_dirs
print SoPlex_libraries
print SCIP_include_dirs
print SCIP_libraries
print ZIMPL_include_dirs
print ZIMPL_libraries
print IPO_include_dirs
print IPO_libraries
print IPO_source

ext = Extension(
  'IPO',
  ['IPO.pyx'],
  include_dirs = GMP_include_dirs + SoPlex_include_dirs + ZIMPL_include_dirs + SCIP_include_dirs + IPO_include_dirs + [IPO_source],
  libraries = IPO_libraries + SCIP_libraries + ZIMPL_libraries + SoPlex_libraries,
  library_dirs = IPO_library_dirs,
  runtime_library_dirs = [],
  extra_compile_args = ['-std=c++11'],
  language = 'c++'
)

setup(
  name = 'IPO',
  version = '0.1',
  ext_modules = cythonize([ext])
)
