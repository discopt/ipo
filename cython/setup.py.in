import os
from setuptools import setup, Extension
from Cython.Build import cythonize

IPO_include_dirs = "@IPO_INCLUDE_DIRS@"
IPO_libraries = "@IPO_LIBRARIES@".replace('ipo-shared', 'ipo')
IPO_library_dirs = IPO_include_dirs # TODO: replace by cmake-generated.
IPO_source = "@CMAKE_SOURCE_DIR@"

def parseIncludes(incs):
  incs = incs.replace(';;', ';').split(';')
  return incs

IPO_include_dirs = parseIncludes(IPO_include_dirs)

def parseLibraries(libs):
   libs = libs.split(';')
   for i in xrange(len(libs)):
      if libs[i].startswith('-l'):
         libs[i] = libs[i][2:]
      if libs[i].startswith('lib'):
         libs[i] = libs[i][3:]
   
   if len(libs) == 0:
      return None
   return libs

IPO_libraries = parseLibraries(IPO_libraries)

def parseLibraryDirs(dirs):
  dirs = dirs.split(';')
  return dirs

IPO_library_dirs = parseLibraryDirs(IPO_library_dirs)

if True:
  print IPO_include_dirs
  print IPO_libraries
  print IPO_source

include_dirs = IPO_include_dirs + [IPO_source]
include_dirs = filter(lambda x: x is not '', include_dirs)

ext = Extension(
  'IPO',
  ['IPO.pyx'],
  include_dirs = include_dirs,
  libraries = IPO_libraries,
  library_dirs = IPO_library_dirs,
  runtime_library_dirs = [],
  extra_compile_args = ['-std=c++11'],
  language = 'c++'
)

setup(
  name = 'IPO',
  version = '1.1',
  ext_modules = cythonize([ext])
)
