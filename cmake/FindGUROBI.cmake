find_path(GUROBI_INCLUDE_DIRS
  NAMES gurobi_c.h
  HINTS ${GUROBI_DIR} $ENV{GUROBI_DIR}
  PATH_SUFFIXES linux64/include include)

file(READ ${GUROBI_INCLUDE_DIRS}/gurobi_c.h HEADER)
string(REGEX MATCH "#define GRB_VERSION_MAJOR *([0-9]*)" _ ${HEADER})
set(GUROBI_VERSION_MAJOR ${CMAKE_MATCH_1})
string(REGEX MATCH "#define GRB_VERSION_MINOR *([0-9]*)" _ ${HEADER})
set(GUROBI_VERSION_MINOR ${CMAKE_MATCH_1})
string(REGEX MATCH "#define GRB_VERSION_TECHNICAL *([0-9]*)" _ ${HEADER})
set(GUROBI_VERSION_TECHNICAL ${CMAKE_MATCH_1})
set(GUROBI_VERSION "${GUROBI_VERSION_MAJOR}.${GUROBI_VERSION_MINOR}.${GUROBI_VERSION_TECHNICAL}")

find_library(GUROBI_CXX_LIBRARY
  NAMES gurobi_c++ gurobi_stdc++
  HINTS ${GUROBI_DIR} $ENV{GUROBI_DIR}
  PATH_SUFFIXES linux64/lib lib)

find_library(GUROBI_LIBRARY
  NAMES gurobi gurobi${GUROBI_VERSION_MAJOR}${GUROBI_VERSION_MINOR}
  HINTS ${GUROBI_DIR} $ENV{GUROBI_DIR}
  PATH_SUFFIXES linux64/lib lib)

set(GUROBI_LIBRARIES ${GUROBI_LIBRARY} ${GUROBI_CXX_LIBRARY} )

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(GUROBI
  REQUIRED_VARS GUROBI_INCLUDE_DIRS GUROBI_LIBRARIES
  VERSION_VAR GUROBI_VERSION)

